color = clase_ternaria)) +
facet_grid(clase_ternaria ~ ., scales = "free") +
geom_boxplot()
ggplot(ds, aes(x=ccallcenter_transacciones,
color = clase_ternaria)) +
facet_grid(clase_ternaria ~ ., scales = "free") +
geom_density(position ="identity", fill="white", alpha=0.5)
ggplot(ds, aes(x=ccallcenter_transacciones,
fill = clase_ternaria)) +
geom_bar(position = "fill")
ggplot(ds, aes(x=
ccallcenter_transacciones,
fill = clase_ternaria)) +
facet_grid(clase_ternaria ~ ., scales = "free") +
geom_histogram()
# geom_density(position ="identity", fill="white", alpha=0.5)
# prop.table(table(ds$ccajas_transacciones, ds$clase_ternaria), margin=2)
ggplot(ds, aes(x=ccallcenter_transacciones,
color = clase_ternaria)) +
facet_grid(clase_ternaria ~ ., scales = "free") +
geom_density(position ="identity", fill="white", alpha=0.5)
ggplot(ds, aes(x=scale(ccallcenter_transacciones),
color = clase_ternaria)) +
facet_grid(clase_ternaria ~ ., scales = "free") +
geom_boxplot()
ggplot(ds, aes(x=ccallcenter_transacciones,
fill = clase_ternaria)) +
geom_bar(position = "fill")
describeBy(ds[,.(ccallcenter_transacciones, clase_ternaria)], group="clase_ternaria")
ggplot(ds, aes(x=ccallcenter_transacciones,
fill = clase_ternaria)) +
geom_bar(position = "fill")
ggplot(ds, aes(x=ccallcenter_transacciones,
color = clase_ternaria)) +
facet_grid(clase_ternaria ~ ., scales = "free") +
geom_density(position ="identity", fill="white", alpha=0.5)
ggplot(ds, aes(x=
ccallcenter_transacciones,
fill = clase_ternaria)) +
facet_grid(clase_ternaria ~ ., scales = "free") +
geom_histogram()
prop.table(table(ds$ccajas_transacciones, ds$clase_ternaria), margin=2)
prop.table(table(ds$ccallcenter_transacciones, ds$clase_ternaria), margin=2)
prop.table(table(ds$ccallcenter_transacciones, ds$clase_ternaria), margin=1
)
ggplot(ds, aes(x=mcuentas_saldo, color = clase_ternaria)) +
facet_grid(clase_ternaria ~ .) +
geom_density()
ggplot(ds, aes(x= clase_ternaria, y=mcuentas_saldo)) +
# facet_grid(clase_ternaria ~ .) +
geom_bar(stat= "identity")
ggplot(ds, aes(x=cproductos,
y = mcuentas_saldo)) +
geom_bar(position = "fill")
ggplot(ds, aes(x= clase_ternaria, y=mcuentas_saldo)) +
# facet_grid(clase_ternaria ~ .) +
geom_bar(stat= "identity")
ggplot(ds, aes(x=cproductos,
y = mcuentas_saldo)) +
geom_bar(stat = "fill")
ggplot(ds, aes(x=mcuentas_saldo,
fill = clase_ternaria)) +
geom_bar(position = "fill")
ggplot(ds, aes(x=mcuentas_saldo,
fill = clase_ternaria)) +
geom_bar(position = "fill")
ggplot(ds, aes(x=mcuentas_saldo,
fill = clase_ternaria)) +
geom_col(position = "fill")
ggplot(ds, aes(x=mcuentas_saldo,
fill = clase_ternaria)) +
geom_bar(position = "fill")
ggplot(ds, aes(x=mcuentas_saldo, color = clase_ternaria)) +
facet_grid(clase_ternaria ~ .) +
geom_density()
ggplot(ds, aes(x= clase_ternaria, y=mcuentas_saldo)) +
# facet_grid(clase_ternaria ~ .) +
geom_bar(stat= "identity")
min(ds$vble_cat)
###############
summary(ds$mcuentas_saldo)
summary(ds$vble_cat)
min(ds$mcuentas_saldo)
###############
summary(ds$mcuentas_saldo)
ggplot(ds, aes(x=mcuentas_saldo, color = clase_ternaria)) +
facet_grid(clase_ternaria ~ .) +
geom_density()
ggplot(ds, aes(x= clase_ternaria, y=mcuentas_saldo)) +
# facet_grid(clase_ternaria ~ .) +
geom_bar(stat= "identity")
ggplot(ds, aes(x= clase_ternaria, y=mcuentas_saldo)) +
# facet_grid(clase_ternaria ~ .) +
geom_bar(stat= "fill")
ggplot(ds, aes(x=mcuentas_saldo, color = clase_ternaria)) +
facet_grid(clase_ternaria ~ .) +
geom_density()
ds_cproductos <- dcast(ds, cproductos ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_cproductos[, ratio_baja2 := `BAJA+2` /  (`BAJA+1`+`BAJA+2`+CONTINUA)]
ds_cproductos[, Ganancia :=  48750 * `BAJA+2` - 1250 * (CONTINUA + `BAJA+1`) ]
cat("Ganancia =",ds_cproductos[Ganancia > 0, sum(Ganancia)])
describeBy(ds[,.(mcuentas_saldo, clase_ternaria)], group="clase_ternaria")
seq(from = min(ds$mcuentas_saldo), to = max(ds$mcuentas_saldo), by = 70000)
seq(from = min(ds$mcuentas_saldo), to = max(ds$mcuentas_saldo), by = 60000)
ds[,  `:=` (vble_cat = as.factor(ifelse(mcuentas_saldo < median(mcuentas_saldo), "Bajo", "Alto" ))  )   ]
ds_vble_cat <- dcast(ds, vble_cat  ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_vble_cat
ds_vble_cat[, total := (`BAJA+1`+`BAJA+2`+CONTINUA)]
ds_vble_cat[, ratio_baja2 := `BAJA+2` / total]
ds_vble_cat[, Visa_status := factor(Visa_status)]
ds_vble_cat[, lift := (ratio_baja2 / churn)]
ds_vble_cat[, vble_cat := factor(vble_cat)]
ds_vble_cat[, lift := (ratio_baja2 / churn)]
ds_vble_cat[, Ganancia :=  48750 * `BAJA+2` - 1250 * (CONTINUA + `BAJA+1`) ]
ds_vble_cat
cat("Ganancia =",ds_vble_cat[Ganancia > 0, sum(Ganancia)])
for (i in seq(from = min(ds$mcuentas_saldo), to = max(ds$mcuentas_saldo), by = 60000)){
cat(i)
# ds[,  `:=` (vble_cat = as.factor(ifelse(mcuentas_saldo < i,
#                                         "Bajo", "Alto"
#                                         )
#                                  )
#             )
#    ]
}
ds[,  `:=` (vble_cat = as.factor(ifelse(mcuentas_saldo < i,
"Bajo", "Alto"
)
)
)
]
gcia = ds_vble_cat[Ganancia > 0, sum(Ganancia)]
gcia
gcia_i = 0
gcia=2
if (gcia > gcia_i){
gcia_i = gcia
pto_corte= i
}
gcia_i
pto_corte
gcia_i = 0
ds_vble_cat[Ganancia > 0, sum(Ganancia)]
gcia
for (i in seq(from = min(ds$mcuentas_saldo), to = max(ds$mcuentas_saldo), by = 60000)){
ds[,  `:=` (vble_cat = as.factor(ifelse(mcuentas_saldo < i,
"Bajo", "Alto"
)
)
)
]
ds_vble_cat <- dcast(ds, vble_cat  ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_vble_cat[, Ganancia :=  48750 * `BAJA+2` - 1250 * (CONTINUA + `BAJA+1`) ]
gcia = ds_vble_cat[Ganancia > 0, sum(Ganancia)]
if (gcia > gcia_i){
gcia_i = gcia
pto_corte= i
}
}
gcia_i
pto_corte
gcia_i
pto_corte
cat("La ganancia m√°xima de la variable mcuentas_saldo es igual a $", gcia_i, "y su punto de corte es", pto_corte)
ggplot(ds, aes(x=
ccallcenter_transacciones,
fill = clase_ternaria)) +
facet_grid(clase_ternaria ~ ., scales = "free") +
geom_histogram()
describeBy(ds[,.(ccallcenter_transacciones, clase_ternaria)], group="clase_ternaria")
ggplot(ds, aes(x=
ccallcenter_transacciones,
fill = clase_ternaria)) +
facet_grid(clase_ternaria ~ ., scales = "free") +
geom_histogram()
describeBy(ds[,.(ccallcenter_transacciones, clase_ternaria)], group="clase_ternaria")
library( "data.table")
library("ggplot2")
library("psych")
carpeta_datasetsOri <-  "../../../datasetsOri/"
septiembre <- "paquete_premium_202009.csv"
ds <- fread(paste0(carpeta_datasetsOri, septiembre,collapse = ""), header=TRUE, showProgress = FALSE)
ggplot(ds, aes(x=cproductos,
color = clase_ternaria)) +
facet_grid(clase_ternaria ~ ., scales = "free") +
geom_density(position ="identity", fill="white", alpha=0.5)
ggplot(ds, aes(x=cproductos,
fill = clase_ternaria)) +
geom_bar(position = "fill")
prop.table(table(ds$cproductos , ds$clase_ternaria), margin = 1)
ds_cproductos <- dcast(ds, cproductos ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_cproductos[, ratio_baja2 := `BAJA+2` /  (`BAJA+1`+`BAJA+2`+CONTINUA)]
ds_cproductos[, Ganancia :=  48750 * `BAJA+2` - 1250 * (CONTINUA + `BAJA+1`) ]
cat("Ganancia =",ds_cproductos[Ganancia > 0, sum(Ganancia)])
ggplot(ds, aes(x=mcuentas_saldo, color = clase_ternaria)) +
facet_grid(clase_ternaria ~ .) +
geom_density()
describeBy(ds[,.(mcuentas_saldo, clase_ternaria)], group="clase_ternaria")
summary(ds$mcuentas_saldo)
gcia_i = 0
for (i in seq(from = min(ds$mcuentas_saldo), to = max(ds$mcuentas_saldo), by = 40000)){
ds[,  `:=` (vble_cat = as.factor(ifelse(mcuentas_saldo < i,
"Bajo", "Alto"
)
)
)
]
ds_vble_cat <- dcast(ds, vble_cat  ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_vble_cat[, Ganancia :=  48750 * `BAJA+2` - 1250 * (CONTINUA + `BAJA+1`) ]
gcia = ds_vble_cat[Ganancia > 0, sum(Ganancia)]
if (gcia > gcia_i){
gcia_i = gcia
pto_corte= i
}
}
pb <- winProgressBar(title = "Progress Bar", label="0% done", min = 0, max =total , width = 300, initial=0)
rang = seq(from = min(ds$mcuentas_saldo), to = max(ds$mcuentas_saldo), by = 40000)
length(rango)
rango = seq(from = min(ds$mcuentas_saldo), to = max(ds$mcuentas_saldo), by = 40000)
length(rango)
iters = seq(from = min(ds$mcuentas_saldo), to = max(ds$mcuentas_saldo), by = 40000)
pb <- winProgressBar(title = "Progress Bar", label="0% done", min = 0, max =length(iters) , width = 300, initial=0)
close(pb)
# summary(ds$mcuentas_saldo)
iters = seq(from = min(ds$mcuentas_saldo), to = max(ds$mcuentas_saldo), by = 40000)
pb <- winProgressBar(title = "Progress Bar", label="0% done", min = 0, max =length(iters) , width = 300, initial=0)
gcia_i = 0
for (i in iters ){
setWinProgressBar(pb, which(df$x== i),label=paste( round(which(df$x== i)/iters*100, 0),"% done"))
ds[,  `:=` (vble_cat = as.factor(ifelse(mcuentas_saldo < i,
"Bajo", "Alto"
)
)
)
]
ds_vble_cat <- dcast(ds, vble_cat  ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_vble_cat[, Ganancia :=  48750 * `BAJA+2` - 1250 * (CONTINUA + `BAJA+1`) ]
gcia = ds_vble_cat[Ganancia > 0, sum(Ganancia)]
if (gcia > gcia_i){
gcia_i = gcia
pto_corte= i
}
}
for (i in iters ){
setTxtProgressBar(pb, i)
ds[,  `:=` (vble_cat = as.factor(ifelse(mcuentas_saldo < i,
"Bajo", "Alto"
)
)
)
]
ds_vble_cat <- dcast(ds, vble_cat  ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_vble_cat[, Ganancia :=  48750 * `BAJA+2` - 1250 * (CONTINUA + `BAJA+1`) ]
gcia = ds_vble_cat[Ganancia > 0, sum(Ganancia)]
if (gcia > gcia_i){
gcia_i = gcia
pto_corte= i
}
}
close(pb)
pb <- txtProgressBar(min = 0, max = length(iters), style = 3)
setTxtProgressBar(pb, i)
# summary(ds$mcuentas_saldo)
iters = seq(from = min(ds$mcuentas_saldo), to = max(ds$mcuentas_saldo), by = 40000)
pb <- txtProgressBar(min = 0, max = length(iters), style = 3)
gcia_i = 0
for (i in iters ){
setTxtProgressBar(pb, i)
ds[,  `:=` (vble_cat = as.factor(ifelse(mcuentas_saldo < i,
"Bajo", "Alto"
)
)
)
]
ds_vble_cat <- dcast(ds, vble_cat  ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_vble_cat[, Ganancia :=  48750 * `BAJA+2` - 1250 * (CONTINUA + `BAJA+1`) ]
gcia = ds_vble_cat[Ganancia > 0, sum(Ganancia)]
if (gcia > gcia_i){
gcia_i = gcia
pto_corte= i
}
}
close(pb)
cat("La ganancia m√°xima de la variable mcuentas_saldo es igual a $", gcia_i, "y su punto de corte es", pto_corte)
cat("La ganancia m√°xima de la variable mcuentas_saldo es igual a $", gcia_i, "y su punto de corte es", pto_corte)
describe = describeBy(ds[,.(mcuentas_saldo, clase_ternaria)], group="clase_ternaria")
describe$"CONTINUA"$median / describe$"BAJA+2"$median
describe$"CONTINUA"$median / describe$"BAJA+2"$median - 1
describe$"CONTINUA"$median
describe$"CONTINUA"$median
describe$"CONTINUA"$median[1]
describe$"CONTINUA"$median[1] / describe$"BAJA+2"$median[1] - 1
describe$"CONTINUA"$median[1] / describe$"BAJA+2"$median[1]
(describe$"CONTINUA"$median[1] / describe$"BAJA+2"$median[1])-1
cat(( describe$"BAJA+2"$median[1]/describe$"CONTINUA"$median[1])-1 )
cat((( describe$"BAJA+2"$median[1]/describe$"CONTINUA"$median[1])-1 )*100)
cat((( describe$"CONTINUA"$median[1]/describe$"BAJA+2"$median[1])-1 )*100)
describe
83/35739.32
describe
83.94/35739.32
35739.32/83.94
83.94/35739.32
cat((( describe$"BAJA+2"$median[1]/describe$"CONTINUA"$median[1])-1 ) )
cat((( describe$"CONTINUA"$median[1]/describe$"BAJA+2"$median[1])-1 ))
35739.32/83.94
83.94/35739.32
cat((( describe$"BAJA+2"$median[1]/describe$"CONTINUA"$median[1])-1 ) )
83.94/35739.32
describe
83.94/35739.32-1
cat((( describe$"BAJA+2"$median[1]/describe$"CONTINUA"$median[1])-1 ) )
cat((( describe$"BAJA+2"$median[1]/describe$"CONTINUA"$median[1])-1 )*100 )
35739.32/83.94-1
cat((( describe$"CONTINUA"$median[1]/describe$"BAJA+2"$median[1])-1 )*100)
35739.32/83.94-1
cat("Los clientes que contin√∫an poseen un saldo", (( describe$"CONTINUA"$median[1]/describe$"BAJA+2"$median[1])-1 )*100, "% mayor" )
cat("Los clientes que contin√∫an poseen un saldo en sus cuentas", (( describe$"CONTINUA"$median[1]/describe$"BAJA+2"$median[1])-1 )*100, "% mayor" )
ds[,  `:=` (morosidad = rowSums(.SD, na.rm= T)), .SDcols =c("Visa_delinquency", "Master_delinquency")   ]
ds_morosidad <- dcast(ds, morosidad  ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_morosidad
ds_morosidad[, total := (`BAJA+1`+`BAJA+2`+CONTINUA)]
ds_morosidad[, ratio_baja2 := `BAJA+2` / total]
ds_morosidad[, morosidad := factor(morosidad)]
ds_morosidad
ds_morosidad[, lift := (ratio_baja2 / churn)]
ds_morosidad[, lift := (ratio_baja2 / churn)]
# Ratio churn
target <- dcast(ds, foto_mes ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
churn <- target$`BAJA+2` / (target$`BAJA+2` + target$`BAJA+1` + target$CONTINUA)
ds_morosidad[, lift := (ratio_baja2 / churn)]
ds_morosidad
ds[,  `:=` (morosidad = ifelse(is.na(morosidad), Visa_delinquency,morosidad ))   ]
ds_morosidad
ds_morosidad <- dcast(ds, morosidad  ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_morosidad[, total := (`BAJA+1`+`BAJA+2`+CONTINUA)]
ds_morosidad[, ratio_baja2 := `BAJA+2` / total]
ds_morosidad[, morosidad := factor(morosidad)]
ds_morosidad[, lift := (ratio_baja2 / churn)]
ds_morosidad
ds_morosidad <- dcast(ds, Visa_delinquency  ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_morosidad[, total := (`BAJA+1`+`BAJA+2`+CONTINUA)]
ds_morosidad[, ratio_baja2 := `BAJA+2` / total]
ds_morosidad[, morosidad := factor(morosidad)]
ds_morosidad[, lift := (ratio_baja2 / churn)]
ds_morosidad[, Visa_delinquency := factor(Visa_delinquency)]
# ds_morosidad[, morosidad := factor(morosidad)]
ds_morosidad[, lift := (ratio_baja2 / churn)]
ds_morosidad
# Morosidad
ds[,  `:=` (morosidad = rowSums(.SD, na.rm= T)), .SDcols =c("Visa_delinquency", "Master_delinquency")   ]
ds[,   morosidad := ifelse(is.na(morosidad), Visa_delinquency,morosidad )    ]
# Ratio churn
target <- dcast(ds, foto_mes ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
churn <- target$`BAJA+2` / (target$`BAJA+2` + target$`BAJA+1` + target$CONTINUA)
# Morosidad
ds[,  `:=` (morosidad = rowSums(.SD, na.rm= T)), .SDcols =c("Visa_delinquency", "Master_delinquency")   ]
ds[,   morosidad := ifelse(is.na(morosidad), Visa_delinquency,morosidad )    ]
ds_morosidad <- dcast(ds, Visa_delinquency  ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_morosidad[, total := (`BAJA+1`+`BAJA+2`+CONTINUA)]
ds_morosidad[, ratio_baja2 := `BAJA+2` / total]
# ds_morosidad[, Visa_delinquency := factor(Visa_delinquency)]
ds_morosidad[, morosidad := factor(morosidad)]
ds_morosidad <- dcast(ds, morosidad  ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_morosidad[, total := (`BAJA+1`+`BAJA+2`+CONTINUA)]
ds_morosidad[, ratio_baja2 := `BAJA+2` / total]
# ds_morosidad[, Visa_delinquency := factor(Visa_delinquency)]
ds_morosidad[, morosidad := factor(morosidad)]
ds_morosidad[, lift := (ratio_baja2 / churn)]
ds_morosidad
# Morosidad
ds[,  `:=` (morosidad = rowSums(.SD, na.rm= T)), .SDcols =c("Visa_delinquency", "Master_delinquency")   ]
sum(is.na(ds$morosidad))
# Morosidad
ds[,  `:=` (morosidad = rowSums(.SD, na.rm= T)), .SDcols =c("Visa_delinquency", "Master_delinquency")   ]
sum(is.na(ds$morosidad))
ds[,  `:=` (morosidad = Visa_delinquency + Master_delinquency)   ]
sum(is.na(ds$morosidad))
# Morosidad
ds[,  `:=` (morosidad = rowSums(.SD, na.rm= T)), .SDcols =c("Visa_delinquency", "Master_delinquency")   ]
sum(is.na(ds$morosidad))
# Morosidad
ds[,  `:=` (morosidad = rowSums(.SD, na.rm= T)), .SDcols =c("Visa_delinquency", "Master_delinquency")   ]
ds_morosidad <- dcast(ds, morosidad  ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_morosidad[, total := (`BAJA+1`+`BAJA+2`+CONTINUA)]
ds_morosidad[, ratio_baja2 := `BAJA+2` / total]
ds_morosidad[, morosidad := factor(morosidad)]
ds_morosidad[, lift := (ratio_baja2 / churn)]
ds_morosidad
ds_morosidad <- dcast(ds,
Master_delinquency
# morosidad
~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_morosidad[, total := (`BAJA+1`+`BAJA+2`+CONTINUA)]
ds_morosidad[, ratio_baja2 := `BAJA+2` / total]
ds_morosidad[, lift := (ratio_baja2 / churn)]
ds_morosidad
ds_morosidad <- dcast(ds,
Visa_delinquency
# morosidad
~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_morosidad[, total := (`BAJA+1`+`BAJA+2`+CONTINUA)]
ds_morosidad[, ratio_baja2 := `BAJA+2` / total]
ds_morosidad[, lift := (ratio_baja2 / churn)]
ds_morosidad
# Ratio churn
target <- dcast(ds, foto_mes ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
churn <- target$`BAJA+2` / (target$`BAJA+2` + target$`BAJA+1` + target$CONTINUA)
# Morosidad
ds[,  `:=` (morosidad = rowSums(.SD, na.rm= T)), .SDcols =c("Visa_delinquency", "Master_delinquency")   ]
ds_morosidad <- dcast(ds,morosidad ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_morosidad[, total := (`BAJA+1`+`BAJA+2`+CONTINUA)]
ds_morosidad[, ratio_baja2 := `BAJA+2` / total]
ds_morosidad[, morosidad := factor(morosidad)]
ds_morosidad[, lift := (ratio_baja2 / churn)]
ds_morosidad
ggplot(ds_tarjeta_estado, aes(x=morosidad, y=ratio_baja2)) +
geom_bar(stat="identity", fill="green") +  geom_hline(yintercept = churn, color="black") +
ggtitle("Ratio de churn por categor√≠a de delinquency")
ggplot(ds_morosidad, aes(x=morosidad, y=ratio_baja2)) +
geom_bar(stat="identity", fill="green") +  geom_hline(yintercept = churn, color="black") +
ggtitle("Ratio de churn por categor√≠a de delinquency")
ds_morosidad[, Ganancia :=  48750 * `BAJA+2` - 1250 * (CONTINUA + `BAJA+1`) ]
cat("Ganancia =",ds_morosidad[Ganancia > 0, sum(Ganancia)])
ds_morosidad
# Ratio churn
target <- dcast(ds, foto_mes ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
churn <- target$`BAJA+2` / (target$`BAJA+2` + target$`BAJA+1` + target$CONTINUA)
# Morosidad
ds[,  `:=` (morosidad = rowSums(.SD, na.rm= T)), .SDcols =c("Visa_delinquency", "Master_delinquency")   ]
ds_morosidad <- dcast(ds,morosidad ~ clase_ternaria,
length,
value.var = "clase_ternaria" )
ds_morosidad[, total := (`BAJA+1`+`BAJA+2`+CONTINUA)]
ds_morosidad[, ratio_baja2 := `BAJA+2` / total]
ds_morosidad[, morosidad := factor(morosidad)]
ds_morosidad[, lift := (ratio_baja2 / churn)]
ds_morosidad[, Ganancia :=  48750 * `BAJA+2` - 1250 * (CONTINUA + `BAJA+1`) ]
ds_morosidad
cat("Ganancia =",ds_morosidad[Ganancia > 0, sum(Ganancia)])
ggplot(ds, aes(x=Visa_delinquency, color = clase_ternaria)) +
facet_grid(clase_ternaria ~ .) +
geom_density()
ggplot(ds, aes(x=Visa_delinquency, color = clase_ternaria)) +
facet_grid(clase_ternaria ~ .) +
geom_histogram()
ggplot(ds, aes(x=Visa_delinquency, fill = clase_ternaria)) +
facet_grid(clase_ternaria ~ ., scales = "free") +
geom_histogram()
ggplot(ds, aes(x=morosidad, fill = clase_ternaria)) +
facet_grid(clase_ternaria ~ ., scales = "free") +
geom_histogram()
ggplot(ds, aes(x=morosidad, fill = clase_ternaria)) +
facet_grid(clase_ternaria ~ ., scales = "free") +
ggplot(ds, aes(x=morosidad, fill = clase_ternaria)) +
facet_grid(clase_ternaria ~ ., scales = "free") +
geom_histogram()
ggplot(ds, aes(x=morosidad, fill = clase_ternaria)) +
facet_grid(clase_ternaria ~ ., scales = "free") +
geom_histogram()
ggplot(ds, aes(x=morosidad, fill = clase_ternaria)) +
facet_grid(clase_ternaria ~ ., scales = "free") +
geom_histogram()
ggplot(ds_morosidad, aes(x=morosidad, y=ratio_baja2)) +
geom_bar(stat="identity", fill="green") +  geom_hline(yintercept = churn, color="black") +
ggtitle("Ratio de churn por categor√≠a de delinquency")
cat("Ganancia =",ds_morosidad[Ganancia > 0, sum(Ganancia)])
ds_morosidad
ds_cproductos[, lift := (ratio_baja2 / churn)]
ds_cproductos
