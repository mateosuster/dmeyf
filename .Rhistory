# WARNING  usted debe cambiar este script si lo corre en su propio Linux
#limpio la memoria
rm( list=ls() )  #remove all objects
gc()             #garbage collection
require("data.table")
require("rlist")
require("yaml")
require("lightgbm")
#paquetes necesarios para la Bayesian Optimization
require("DiceKriging")
require("mlrMBO")
#para poder usarlo en la PC y en la nube sin tener que cambiar la ruta
#cambiar aqui las rutas en su maquina
switch ( Sys.info()[['sysname']],
Windows = { directory.root  <-  "M:\\" },   #Windows
Darwin  = { directory.root  <-  "~/dm/" },  #Apple MAC
Linux   = { directory.root  <-  "~/buckets/b1/" } #Google Cloud
)
#defino la carpeta donde trabajo
setwd( directory.root )
256*2
rm( list=ls() )  #remove all objects
gc()             #garbage collection
require("data.table")
setwd("../../../dmeyf/")
dataset  <- fread("../datasetsOri/paquete_premium_202009.csv")
#ordeno el dataset
setorder( dataset,  foto_mes )
campos_buenos  <-  setdiff(  colnames( dataset),  c("numero_de_cliente","foto_mes","clase_ternaria" ) )
campos_buenos
ggplot(dataset, aes(x = foto_mes , y = ctrx_quarter, group= foto_mes))+
geom_boxplot()
require("ggplot2")
ggplot(dataset, aes(x = foto_mes , y = ctrx_quarter, group= foto_mes))+
geom_boxplot()
unique(dataset$foto_mes)
ggplot(dataset, aes(x = foto_mes , y = ctrx_quarter, group= foto_mes, color = clase_ternaria))+
geom_boxplot()
ggplot(dataset, aes(x = foto_mes , y = ctrx_quarter, group= foto_mes, fill = clase_ternaria))+
geom_boxplot()
ggplot(dataset, aes(x = foto_mes , y = ctrx_quarter, group= foto_mes))+
geom_boxplot(aes(fill = clase_ternaria))
ggplot(dataset, aes(x = foto_mes , y = ctrx_quarter, fill = clase_ternaria, group= foto_mes))+
geom_boxplot()
unique(dataset$clase_ternaria)
ggplot(dataset, aes(x = foto_mes , y = ctrx_quarter, fill = as.factor(clase_ternaria), group= foto_mes))+
geom_boxplot()
ggplot(dataset, aes(x = foto_mes , y = ctrx_quarter, fill = as.factor(clase_ternaria)))+
geom_boxplot()
dataset_b  <- fread("../datasetsOri/paquete_premium_202009.csv")
unique(dataset$foto_mes)
#ordeno el dataset
setorder( dataset,  foto_mes:= 202011 )
#ordeno el dataset
setorder( dataset,  "foto_mes" := 202011 )
dataset_b[, foto_mes := 202011]
unique(dataset_b$foto_mes)
rbind(dataset, dataset_b)
data = rbind(dataset, dataset_b)
ggplot(data, aes(x = foto_mes , y = ctrx_quarter, fill = as.factor(clase_ternaria)))+
geom_boxplot()
ggplot(data, aes(x = foto_mes , y = ctrx_quarter, group= foto_mes, fill = as.factor(clase_ternaria)))+
geom_boxplot()
ggplot(data, aes(x = foto_mes , y = ctrx_quarter, group= c(foto_mes,clase_ternaria), fill = clase_ternaria))+
geom_boxplot()
ggplot(data, aes(x = foto_mes , y = ctrx_quarter, fill = clase_ternaria))+
geom_boxplot()
as.Date(data$foto_mes)
as.Date(data$foto_mes, tryFormats = "%Y%m" )
as.Date(data$foto_mes, tryFormats = "%Y%m", origin = "2020/09" )
as.Date(data$foto_mes, tryFormats = "%Y/%m", origin = "2020/09" )
lubridate::parse_date_time2(data$foto_mes, orders = "ym" )
lubridate::parse_date_time2(as.character(data$foto_mes), orders = "ym" )
lubridate::parse_date_time2(as.character(data$foto_mes), orders = "ymd" )
lubridate::parse_date_time(as.character(data$foto_mes), orders = "ymd" )
lubridate::parse_date_time(as.character(data$foto_mes), orders = "ym" )
lubridate::ym(as.character(data$foto_mes) )
data[, fecha := lubridate::ym(as.character(data$foto_mes) ) ]
ggplot(data, aes(x = fecha , y = ctrx_quarter, fill = clase_ternaria))+
geom_boxplot()
ggplot(data, aes(x = fecha , y = ctrx_quarter, group = fecha))+
geom_boxplot()
ggplot(data, aes(x = fecha , y = ctrx_quarter, group = fecha))+
geom_boxplot(aes(fill = clase_ternaria))
ggplot(data=data, aes(x = fecha , y = ctrx_quarter, fill = fecha))+
geom_boxplot()
ggplot(data=data, aes(x = fecha , y = ctrx_quarter, fill = clase_ternaria))+
geom_boxplot()
ggplot(data=data, aes(x = fecha , y = ctrx_quarter, fill = as.factor(clase_ternaria)))+
geom_boxplot()
ggplot(data=data, aes(x = fecha , y = ctrx_quarter, fill = as.factor(clase_ternaria),
group = interation(fecha, clase_ternaria)))+
geom_boxplot()
ggplot(data=data, aes(x = fecha , y = ctrx_quarter, fill = as.factor(clase_ternaria),
group = interaction(fecha, clase_ternaria)))+
geom_boxplot()
for( campo in  campos_buenos ){
print(ggplot(data= data, aes(x = fecha , y = get(campo), fill = as.factor(clase_ternaria),
group = interaction(fecha, clase_ternaria)))+
geom_boxplot() )
}
2+2
#limpio la memoria
rm( list=ls() )  #remove all objects
gc()             #garbage collection
require("data.table")
require("ggplot2")
setwd("../../../dmeyf/")
getwd()
dataset  <- fread("../datasetsOri/paquete_premium_202009.csv")
dataset_b  <- fread("../datasetsOri/paquete_premium_202009.csv")
dataset_b[, foto_mes := 202011]
data = rbind(dataset, dataset_b)
#ordeno el dataset
setorder( dataset,  foto_mes )
campos_buenos  <-  setdiff(  colnames( dataset),  c("numero_de_cliente","foto_mes","clase_ternaria" ) )
data = data[sample(nrow(data), 100), ]
data = rbind(dataset, dataset_b)
data = data[sample(nrow(data), 1000), ]
for( campo in  campos_buenos ){
print(ggplot(data= data, aes(x = foto_mes , y = get(campo), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
geom_boxplot()+
labs(title= paste("Boxplot de", campo, sep = " ") ,
y = campo)  )
}
pdf("./work/ggplot_graf.pdf")
for( campo in  campos_buenos ){
print(ggplot(data= data, aes(x = foto_mes , y = get(campo), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
geom_boxplot(outlier.shape = NA)+
labs(title= paste("Boxplot de", campo, sep = " ") ,
subtitle = "Sin outliers",
y = campo)  )
}
dev.off()
getwd()
?stat_summary
calc_boxplot_stat <- function(x) {
coef <- 1.5
n <- sum(!is.na(x))
# calculate quantiles
stats <- quantile(x, probs = c(0.0, 0.25, 0.5, 0.75, 1.0))
names(stats) <- c("ymin", "lower", "middle", "upper", "ymax")
iqr <- diff(stats[c(2, 4)])
# set whiskers
outliers <- x < (stats[2] - coef * iqr) | x > (stats[4] + coef * iqr)
if (any(outliers)) {
stats[c(1, 5)] <- range(c(stats[2:4], x[!outliers]), na.rm = TRUE)
}
return(stats)
}
for( campo in  campos_buenos ){
print(ggplot(data= data, aes(x = foto_mes , y = get(campo), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
# geom_boxplot(outlier.shape = NA)+
stat_summary(fun.data = calc_boxplot_stat, geom="boxplot") +
labs(title= paste("Boxplot de", campo, sep = " ") ,
subtitle = "Sin outliers",
y = campo)  )
}
for( campo in  campos_buenos ){
data[, campo := scale(campo), foto_mes]
print(ggplot(data= data, aes(x = foto_mes , y = get(campo), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
geom_boxplot(outlier.shape = NA)+
labs(title= paste("Boxplot de", campo, sep = " ") ,
subtitle = "Sin outliers",
y = campo)  )
}
for( campo in  campos_buenos ){
data[, campo := scale(get(campo)), foto_mes]
print(ggplot(data= data, aes(x = foto_mes , y = get(campo), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
geom_boxplot(outlier.shape = NA)+
labs(title= paste("Boxplot de", campo, sep = " ") ,
subtitle = "Sin outliers",
y = campo)  )
}
for( campo in  campos_buenos ){
data[, campo := scale(get(campo))]
print(ggplot(data= data, aes(x = foto_mes , y = get(campo), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
geom_boxplot(outlier.shape = NA)+
labs(title= paste("Boxplot de", campo, sep = " ") ,
subtitle = "Sin outliers",
y = campo)  )
}
data = rbind(dataset, dataset_b)
data = data[sample(nrow(data), 1000), ]
for( campo in  campos_buenos ){
data[, campo := scale(get(campo))]
print(ggplot(data= data, aes(x = foto_mes , y = get(campo), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
geom_boxplot(outlier.shape = NA)+
labs(title= paste("Boxplot de", campo, sep = " ") ,
subtitle = "Sin outliers",
y = campo)  )
}
for( campo in  campos_buenos ){
data[, list(campo = scale(get(campo)))]
print(ggplot(data= data, aes(x = foto_mes , y = get(campo), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
geom_boxplot(outlier.shape = NA)+
labs(title= paste("Boxplot de", campo, sep = " ") ,
subtitle = "Sin outliers",
y = campo)  )
}
campo
for( campo in  campos_buenos ){
# data[, list(campo = scale(get(campo)))]
data[, var := scale(get(campo)) ]
print(ggplot(data= data, aes(x = foto_mes , y = get(campo), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
geom_boxplot(outlier.shape = NA)+
labs(title= paste("Boxplot de", campo, sep = " ") ,
subtitle = "Sin outliers",
y = campo)  )
}
for( campo in  campos_buenos ){
# data[, list(campo = scale(get(campo)))]
data[, var := scale(data[,campo] ) ]
print(ggplot(data= data, aes(x = foto_mes , y = get(campo), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
geom_boxplot(outlier.shape = NA)+
labs(title= paste("Boxplot de", campo, sep = " ") ,
subtitle = "Sin outliers",
y = campo)  )
}
for( campo in  campos_buenos ){
# data[, list(campo = scale(get(campo)))]
data[, var := scale(data[,get(campo)] ) ]
print(ggplot(data= data, aes(x = foto_mes , y = get(campo), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
geom_boxplot(outlier.shape = NA)+
labs(title= paste("Boxplot de", campo, sep = " ") ,
subtitle = "Sin outliers",
y = campo)  )
}
for( campo in  campos_buenos ){
# data[, list(campo = scale(get(campo)))]
# data[, var := scale(data[,get(campo)] ) ]
print(ggplot(data= data, aes(x = foto_mes , y = scale(get(campo)), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
geom_boxplot(outlier.shape = NA)+
labs(title= paste("Boxplot de", campo, sep = " ") ,
subtitle = "Sin outliers",
y = campo)  )
}
for( campo in  campos_buenos ){
# data[, list(campo = scale(get(campo)))]
data[, var := scale(c(data[,get(campo)]) ) ]
print(ggplot(data= data, aes(x = foto_mes , y = scale(get(campo)), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
geom_boxplot(outlier.shape = NA)+
labs(title= paste("Boxplot de", campo, sep = " ") ,
subtitle = "Sin outliers",
y = campo)  )
}
data[, (campos_buenos):= lapply(.SD, scale), .SDcols=campos_buenos]
for( campo in  campos_buenos ){
print(ggplot(data= data, aes(x = foto_mes , y = scale(get(campo)), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
geom_boxplot(outlier.shape = NA)+
labs(title= paste("Boxplot de", campo, sep = " ") ,
subtitle = "Sin outliers",
y = campo)  )
}
for( campo in  campos_buenos ){
print(ggplot(data= data, aes(x = foto_mes , y = get(campo), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
geom_boxplot(outlier.shape = NA)+
labs(title= paste("Boxplot de", campo, sep = " ") ,
subtitle = "Sin outliers",
y = campo)  )
}
data = rbind(dataset, dataset_b)
data = data[sample(nrow(data), 1000), ]
data[, (campos_buenos):= lapply(.SD, scale), .SDcols=campos_buenos]
for( campo in  campos_buenos ){
print(ggplot(data= data, aes(x = foto_mes , y = get(campo), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
geom_boxplot(outlier.shape = NA)+
labs(title= paste("Boxplot de", campo, sep = " ") ,
subtitle = "Sin outliers",
y = campo)  )
}
for( campo in  campos_buenos ){
print(ggplot(data= data, aes(x = foto_mes , y = get(campo), fill = as.factor(clase_ternaria),
group = interaction(foto_mes, clase_ternaria)))+
geom_boxplot(outlier.shape = NA)+
ylim(-5,5)+
labs(title= paste("Boxplot de", campo, sep = " ") ,
subtitle = "Sin outliers",
y = campo)  )
}
