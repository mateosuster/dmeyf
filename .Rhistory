cantidad_exploracion_complementaria = "Cant. Exploracion Complementaria",
exploracion_millones_usd = "Millones u$s Exploracion",
explotacion_millones_usd = "Millones u$s Explotacion",
exploracion_compl_millones_usd = "Millones u$s Exp. Complementaria") %>%
mutate(anio = anio - 1,
empresa =case_when(empresa == "YPF S.A." ~ "YPF",
empresa == "PAN AMERICAN ENERGY (SUCURSAL ARGENTINA) LLC" ~ "PAE",
empresa == "PAN AMERICAN ENERGY SL" ~ "PAE",
empresa == "PETROBRAS ARGENTINA S.A." ~ "Petrobras",
empresa == "PESA (PETROBRAS E.S.A.)" ~ "Petrobras",
empresa == "ENAP SIPETROL ARGENTINA S.A." ~ "ENAP SIPETROL",
empresa == "VISTA OIL & GAS ARGENTINA SAU" ~ "Vista Oil and Gas",
empresa == "VISTA OIL & GAS ARGENTINA SA" ~ "Vista Oil and Gas",
empresa == "SINOPEC ARGENTINA EXPLORATION AND PRODUCTION, INC." ~ "Sinopec",
empresa == "TECPETROL S.A." ~ "Tecpetrol",
empresa == "PLUSPETROL S.A." ~ "Pluspetrol",
empresa == "PLUSPETROL ENERGY S.A." ~ "Pluspetrol",
empresa == "COMPAÑÍA GENERAL DE COMBUSTIBLES S.A." ~ "CGC",
empresa == "WINTERSHALL ENERGIA S.A." ~ "Wintershall",
empresa == "YSUR ENERGÍA ARGENTINA S.R.L." ~ "YSUR",
empresa == "YSUR PETROLERA ARGENTINA S.A." ~ "YSUR",
empresa == "TOTAL AUSTRAL S.A." ~ "Total Austral",
T ~ empresa)) %>%
select(anio, empresa, idempresa,  concepto,
cantidad_exploracion, cantidad_explotacion,cantidad_exploracion_complementaria,
exploracion_millones_usd,explotacion_millones_usd, exploracion_compl_millones_usd )
unique(inversiones_anio_anterior$concepto)
inversiones_anio_anterior <- inversiones_anio_anterior %>%
# filter(str_detect(concepto, 'pozo')) %>%
group_by(empresa, anio) %>%
summarise(inversion_explotacion = sum(explotacion_millones_usd, na.rm = T),
inversion_exploracion = sum(exploracion_millones_usd, na.rm = T)) %>%
arrange(-inversion_explotacion) %>%
mutate(unidad = "Millones de USD")
inversiones_anio_anterior
inversiones_2005_2012 <- read_excel("C:/Archivos/Datos/Hidrocarburos/Inversion/Secretaria de Energia/tablas dinamicas/inversiones_2005_2012.xlsx",
col_types = c("numeric", "text", "text",
"numeric", "numeric", "numeric"),
skip = 8) %>%
rename(plan_1ra_semana = "Plan 1ª Sem.",
plan_anual = "Plan Anual",
realizado_anual = "Realizado Anual",
concepto = Concepto) %>%
mutate(anio =  zoo::na.locf(anio),
empresa =  zoo::na.locf(empresa),
unidad = "Millones de USD",
empresa =case_when(empresa == "YPF S.A." ~ "YPF",
empresa == "PAN AMERICAN ENERGY (SUCURSAL ARGENTINA) LLC" ~ "PAE",
empresa == "PAN AMERICAN ENERGY SL" ~ "PAE",
empresa == "PETROBRAS ARGENTINA S.A." ~ "Petrobras",
empresa == "PESA (PETROBRAS E.S.A.)" ~ "Petrobras",
empresa == "ENAP SIPETROL ARGENTINA S.A." ~ "ENAP SIPETROL",
empresa == "VISTA OIL & GAS ARGENTINA SAU" ~ "Vista Oil and Gas",
empresa == "VISTA OIL & GAS ARGENTINA SA" ~ "Vista Oil and Gas",
empresa == "SINOPEC ARGENTINA EXPLORATION AND PRODUCTION, INC." ~ "Sinopec",
empresa == "TECPETROL S.A." ~ "Tecpetrol",
empresa == "PLUSPETROL S.A." ~ "Pluspetrol",
empresa == "PLUSPETROL ENERGY S.A." ~ "Pluspetrol",
empresa == "COMPAÑÍA GENERAL DE COMBUSTIBLES S.A." ~ "CGC",
empresa == "WINTERSHALL ENERGIA S.A." ~ "Wintershall",
empresa == "YSUR ENERGÍA ARGENTINA S.R.L." ~ "YSUR",
empresa == "YSUR PETROLERA ARGENTINA S.A." ~ "YSUR",
empresa == "TOTAL AUSTRAL S.A." ~ "Total Austral",
T ~ empresa)) %>%
filter(!(empresa %in% c("O&G DEVELOPMENTS LTD S.A." ,"PETROMINERA CHUBUT S.E."))) %>%
# filter(str_detect(concepto, 'pozo')) %>%
group_by(empresa, anio, unidad) %>%
summarise(inversion_anual = sum(realizado_anual, na.rm = T)) %>%
arrange(-inversion_anual)
inversiones_2005_2012 <- readxl::read_excel("C:/Archivos/Datos/Hidrocarburos/Inversion/Secretaria de Energia/tablas dinamicas/inversiones_2005_2012.xlsx",
col_types = c("numeric", "text", "text",
"numeric", "numeric", "numeric"),
skip = 8) %>%
rename(plan_1ra_semana = "Plan 1ª Sem.",
plan_anual = "Plan Anual",
realizado_anual = "Realizado Anual",
concepto = Concepto) %>%
mutate(anio =  zoo::na.locf(anio),
empresa =  zoo::na.locf(empresa),
unidad = "Millones de USD",
empresa =case_when(empresa == "YPF S.A." ~ "YPF",
empresa == "PAN AMERICAN ENERGY (SUCURSAL ARGENTINA) LLC" ~ "PAE",
empresa == "PAN AMERICAN ENERGY SL" ~ "PAE",
empresa == "PETROBRAS ARGENTINA S.A." ~ "Petrobras",
empresa == "PESA (PETROBRAS E.S.A.)" ~ "Petrobras",
empresa == "ENAP SIPETROL ARGENTINA S.A." ~ "ENAP SIPETROL",
empresa == "VISTA OIL & GAS ARGENTINA SAU" ~ "Vista Oil and Gas",
empresa == "VISTA OIL & GAS ARGENTINA SA" ~ "Vista Oil and Gas",
empresa == "SINOPEC ARGENTINA EXPLORATION AND PRODUCTION, INC." ~ "Sinopec",
empresa == "TECPETROL S.A." ~ "Tecpetrol",
empresa == "PLUSPETROL S.A." ~ "Pluspetrol",
empresa == "PLUSPETROL ENERGY S.A." ~ "Pluspetrol",
empresa == "COMPAÑÍA GENERAL DE COMBUSTIBLES S.A." ~ "CGC",
empresa == "WINTERSHALL ENERGIA S.A." ~ "Wintershall",
empresa == "YSUR ENERGÍA ARGENTINA S.R.L." ~ "YSUR",
empresa == "YSUR PETROLERA ARGENTINA S.A." ~ "YSUR",
empresa == "TOTAL AUSTRAL S.A." ~ "Total Austral",
T ~ empresa)) %>%
filter(!(empresa %in% c("O&G DEVELOPMENTS LTD S.A." ,"PETROMINERA CHUBUT S.E."))) %>%
# filter(str_detect(concepto, 'pozo')) %>%
group_by(empresa, anio, unidad) %>%
summarise(inversion_anual = sum(realizado_anual, na.rm = T)) %>%
arrange(-inversion_anual)
inversiones_2005_2012
inversiones_anual = inversiones_2005_2012 %>%
filter(anio != 2012) %>%
group_by(anio) %>%
summarise(inversion_anual = sum(inversion_anual)) %>%
rbind(inversiones_anio_anterior %>%
group_by(anio) %>%
summarise(inversion_anual = sum(inversion_explotacion, inversion_exploracion)) )
inversiones_anual %>%
ggplot(aes(anio, inversion_anual))+
geom_col()+
labs(title = "Inversión anual total en el sector hidrocarburífero",
y = "Millones de USD", x = "Año", caption = "Elaboración propia en base a Secretaría de Energía")+
scale_y_continuous(breaks = round(seq(0,
max(inversiones_anual$inversion_anual)+1000, by = 1000)))+
scale_x_continuous(breaks = round(seq(min(inversiones_anual$anio),
max(inversiones_anual$anio), by = 1)))+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
inversiones_2005_2012
graf_inversiones_2005_2012 <-  inversiones_2005_2012 %>%
ggplot(aes(anio, inversion_anual, color = empresa))+
geom_line()+
geom_point()+
labs(title = "Inversiones por empresa (tablas dinamicas)",
subtitle = "Extraído de tablas dinámicas",
y = "Millones de USD",
caption = "Secretaria de Energía")+
theme(legend.position = "none")
ggplotly(graf_inversiones_2005_2012)
graf_inversiones_2005_2012 <-  inversiones_2005_2012 %>%
ggplot(aes(anio, inversion_anual, color = empresa))+
geom_line()+
geom_point()+
labs(title = "Inversiones por empresa (tablas dinamicas)",
subtitle = "Extraído de tablas dinámicas",
y = "Millones de USD",
caption = "Secretaria de Energía")+
theme(legend.position = "none")
plotly::ggplotly(graf_inversiones_2005_2012)
graf_inversiones_anio_anterior <-  inversiones_anio_anterior %>%
ggplot(aes(anio, inversion_explotacion, color = empresa))+
geom_line()+
geom_point()+
labs(title = "Inversiones por empresa (año anterior)",
subtitle = "Inversiones año anterior",
y = "Millones de USD",
caption = "Secretaria de Energía")+
theme(legend.position = "none")
plotly::ggplotly(graf_inversiones_anio_anterior)
inversiones_anio_anterior
inversiones_2005_2012
inversiones_anio_anterior
inversiones_2005_2012
inversiones_anio_anterior %>%
group_by(empresa, anio, unidad) %>%
summarise(inversion_anual = sum(inversion_exploracion, inversion_explotacion))
inversiones_anio_anterior %>%
group_by(empresa, anio, unidad) %>%
summarise(inversion_anual = sum(inversion_exploracion, inversion_explotacion)) %>%
rbind(inversiones_2005_2012)
inv_anual_emp = inversiones_anio_anterior %>%
group_by(empresa, anio, unidad) %>%
summarise(inversion_anual = sum(inversion_exploracion, inversion_explotacion)) %>%
rbind(inversiones_2005_2012)
plot_inv_anual = inv_anual_emp %>%
ggplot(aes(anio, inversion_anual, color = empresa))+
geom_line()+
geom_point()+
labs(title = "Inversiones por empresa (tablas dinamicas)",
subtitle = "Extraído de tablas dinámicas",
y = "Millones de USD",
caption = "Secretaria de Energía")+
theme(legend.position = "none")
plot_inv_anual
plotly::ggplotly(plot_inv_anual)
inv_anual_emp
inv_anual_emp %>%
filter (empresa == YPF)
inv_anual_emp
inv_anual_emp %>%
filter(empresa == "YPF")
inv_anual_emp %>%
filter(empresa == "YPF", anio %in% 2008:2015) %>%
summarise(sum(inversion_anual))
inv_anual_emp
inv_anual_emp %>%
filter(empresa == "YPF", anio %in% 2008:2015) %>%
summarise(sum(inversion_anual))
inv_anual_emp %>%
filter(empresa == "YPF", anio %in% 2008:2015)
inv_anual_emp %>%
ungroup() %>%
filter(empresa == "YPF", anio %in% 2008:2015) %>%
summarise(sum(inversion_anual))
inv_anual_emp %>%
ungroup() %>%
filter(empresa == "YPF", anio %in% 2008:2015)
library(readr)
library(tidyverse)
library(ggplot2)
library(plotly)
library(lubridate)
options (scipen = 999)
#cargo la base
nocs_full <- read_csv("C:/Archivos/Datos/Balances/NOC's/data/NRGI-NOCdatabase-FullDataset.csv") %>%
mutate(observation = as.double(observation),
anio = (as.Date(parse_date_time(year, orders  = "%Y"))))
hidrocarburos_df <- read_csv("C:/Archivos/Datos/Balances/gas y petroleo_datos/datos_r/hidrocarburos_df.csv") %>%
select(-X1)
#para cálculo de rentabilidad
nocs_df <- nocs_full %>%
select(year, company, region, country, productionGroup, indicatorName, units, observation) %>%
filter(indicatorName %in% c("Longterm/fixed assets", "Cash and cash equivalents",
"Net income after taxes", "Income tax",
"Equity", "Total liabilities" ),
units == "USD million") %>%
mutate(row_id = 1:nrow(.)) %>%
spread(.,
key = indicatorName,
value = observation) %>%
select(-c(row_id)) %>%
rename( fixed_assets = "Longterm/fixed assets", cash_and_equi = "Cash and cash equivalents",
net_income_after_tax = "Net income after taxes" , income_tax = "Income tax",
equity = "Equity", liabilities = "Total liabilities") %>%
mutate(net_income_after_tax = as.double(net_income_after_tax),
fixed_assets = as.double(fixed_assets),
cash_and_equi = as.double(cash_and_equi),
income_tax = as.double(income_tax),
equity = as.double(equity),
liabilities = as.double(liabilities),
year = parse_date_time(year, orders = "y")) %>%
group_by(year, company, country, region, productionGroup, units) %>%
summarise(fixed_assets = sum(fixed_assets, na.rm = T),
cash_and_equi = sum(cash_and_equi, na.rm = T),
net_income_after_tax = sum(net_income_after_tax, na.rm = T),
income_tax = sum(income_tax, na.rm =  T),
liabilities = sum(liabilities, na.rm =  T),
equity = sum(equity, na.rm =  T),
KTA = cash_and_equi + fixed_assets,
tg_beforetax = (income_tax + net_income_after_tax) / KTA,
tg_aftertax = net_income_after_tax / KTA,
ratio_endeudamiento = liabilities / equity,
ratio_solvencia =  equity /liabilities)
# nocs_df %>% arrange(-tg_aftertax) %>%
#   select(company, KTA, tg_aftertax)
nocs_df
filtro_emp_df <-  nocs_df  %>%
ungroup() %>%
mutate(company = case_when(!(company %in% filtro_empresas) ~ "Resto",
T ~ company)) %>%
group_by(year, company) %>%
summarise(fixed_assets = sum(fixed_assets, na.rm = T),
cash_and_equi = sum(cash_and_equi, na.rm = T),
net_income_after_tax = sum(net_income_after_tax, na.rm = T),
income_tax = sum(income_tax, na.rm =  T),
liabilities = sum(liabilities, na.rm =  T),
equity = sum(equity, na.rm =  T),
KTA = cash_and_equi + fixed_assets,
tg_beforetax = (income_tax + net_income_after_tax) / KTA,
tg_aftertax = net_income_after_tax / KTA,
ratio_endeudamiento = liabilities / equity,
ratio_solvencia =  equity /liabilities)
filtro_emp_df <-  nocs_df  %>%
ungroup() %>%
mutate(company = case_when(!(company %in% filtro_empresas) ~ "Media (resto de empresas)",
T ~ company)) %>%
group_by(year, company) %>%
summarise(fixed_assets = sum(fixed_assets, na.rm = T),
cash_and_equi = sum(cash_and_equi, na.rm = T),
net_income_after_tax = sum(net_income_after_tax, na.rm = T),
income_tax = sum(income_tax, na.rm =  T),
liabilities = sum(liabilities, na.rm =  T),
equity = sum(equity, na.rm =  T),
KTA = cash_and_equi + fixed_assets,
tg_beforetax = (income_tax + net_income_after_tax) / KTA,
tg_aftertax = net_income_after_tax / KTA,
ratio_endeudamiento = liabilities / equity,
ratio_solvencia =  equity /liabilities)
#filtro exploratorio de empresas
filtro_empresas <- c("YPF", "Petrobras", "YPFB", "PDVSA", "Saudi Aramco")
filtro_emp_df <-  nocs_df  %>%
ungroup() %>%
mutate(company = case_when(!(company %in% filtro_empresas) ~ "Media (resto de empresas)",
T ~ company)) %>%
group_by(year, company) %>%
summarise(fixed_assets = sum(fixed_assets, na.rm = T),
cash_and_equi = sum(cash_and_equi, na.rm = T),
net_income_after_tax = sum(net_income_after_tax, na.rm = T),
income_tax = sum(income_tax, na.rm =  T),
liabilities = sum(liabilities, na.rm =  T),
equity = sum(equity, na.rm =  T),
KTA = cash_and_equi + fixed_assets,
tg_beforetax = (income_tax + net_income_after_tax) / KTA,
tg_aftertax = net_income_after_tax / KTA,
ratio_endeudamiento = liabilities / equity,
ratio_solvencia =  equity /liabilities)
filtro_emp_df
tg_filtro_graf <- filtro_emp_df %>%
filter(tg_aftertax != 0 & fixed_assets > 0 & tg_aftertax < 5 & tg_aftertax > -20 ) %>%
ggplot(aes(year, tg_aftertax, color = company))+
geom_line()+
labs(title =  "Rentabilidad",
subtitle =  "Empresas seleccionadas")+
# theme(legend.position = "none")+
# facet_wrap(~productionGroup)+
scale_y_continuous(labels = scales::percent)
ggplotly(tg_filtro_graf)
filtro_emp_df <-  nocs_df  %>%
ungroup() %>%
mutate(company = case_when(!(company %in% filtro_empresas) ~ "Resto",
T ~ company)) %>%
group_by(year, company) %>%
summarise(fixed_assets = sum(fixed_assets, na.rm = T),
cash_and_equi = sum(cash_and_equi, na.rm = T),
net_income_after_tax = sum(net_income_after_tax, na.rm = T),
income_tax = sum(income_tax, na.rm =  T),
liabilities = sum(liabilities, na.rm =  T),
equity = sum(equity, na.rm =  T),
KTA = cash_and_equi + fixed_assets,
tg_beforetax = (income_tax + net_income_after_tax) / KTA,
tg_aftertax = net_income_after_tax / KTA,
ratio_endeudamiento = liabilities / equity,
ratio_solvencia =  equity /liabilities)
filtro_emp_df
tg_ypf_petrobras <- filtro_emp_df %>%
filter(company %in% c("YPF"   ,   "Petrobras")) %>%
ggplot(aes(year, tg_aftertax, color = company))+
geom_line()+
labs(title =  "Tasa de Ganancia después de impuestos",
subtitle =  "NOC's. Empresas seleccionadas")+
# theme(legend.position = "none")+
# facet_wrap(~productionGroup)+
scale_y_continuous(labels = scales::percent)
ggplotly(tg_ypf_petrobras)
endeudamiento <- filtro_emp_df %>%
# filter(ratio_solvencia >=0 & ratio_solvencia < 4) %>%
ggplot(aes(year, liabilities, color = company))+
geom_point(alpha = 1, size = 3)+
geom_line()+
labs(title =  "Ratio de endeudamiento")+
theme(legend.position="bottom")
# scale_y_continuous(labels = scales::percent)+
endeudamiento_filtro_graf
endeudamiento <- filtro_emp_df %>%
# filter(ratio_solvencia >=0 & ratio_solvencia < 4) %>%
ggplot(aes(year, liabilities, color = company))+
geom_point(alpha = 1, size = 3)+
geom_line()+
labs(title =  "Ratio de endeudamiento")+
theme(legend.position="bottom")
# scale_y_continuous(labels = scales::percent)+
endeudamiento
filtro_emp_df
endeudamiento <- filtro_emp_df %>%
filter(company != "Resto") %>%
ggplot(aes(year, liabilities, color = company))+
geom_point(alpha = 1, size = 3)+
geom_line()+
labs(title =  "Ratio de endeudamiento")+
theme(legend.position="bottom")
endeudamiento
filtro_emp_df
endeudamiento <- filtro_emp_df %>%
filter(company != "Resto") %>%
ggplot(aes(year, liabilities, color = company))+
geom_point(alpha = 1, size = 3)+
geom_line()+
labs(title =  "Liabilities", y = "USD million")+
theme(legend.position="bottom")
# scale_y_continuous(labels = scales::percent)+
endeudamiento
# plotly::ggplotly(plot_inv_anual)
plot_inv_anual
inversiones_2005_2012 <- readxl::read_excel("C:/Archivos/Datos/Hidrocarburos/Inversion/Secretaria de Energia/tablas dinamicas/inversiones_2005_2012.xlsx",
col_types = c("numeric", "text", "text",
"numeric", "numeric", "numeric"),
skip = 8) %>%
rename(plan_1ra_semana = "Plan 1ª Sem.",
plan_anual = "Plan Anual",
realizado_anual = "Realizado Anual",
concepto = Concepto) %>%
mutate(anio =  zoo::na.locf(anio),
empresa =  zoo::na.locf(empresa),
unidad = "Millones de USD",
empresa =case_when(empresa == "YPF S.A." ~ "YPF",
empresa == "PAN AMERICAN ENERGY (SUCURSAL ARGENTINA) LLC" ~ "PAE",
empresa == "PAN AMERICAN ENERGY SL" ~ "PAE",
empresa == "PETROBRAS ARGENTINA S.A." ~ "Petrobras",
empresa == "PESA (PETROBRAS E.S.A.)" ~ "Petrobras",
empresa == "ENAP SIPETROL ARGENTINA S.A." ~ "ENAP SIPETROL",
empresa == "VISTA OIL & GAS ARGENTINA SAU" ~ "Vista Oil and Gas",
empresa == "VISTA OIL & GAS ARGENTINA SA" ~ "Vista Oil and Gas",
empresa == "SINOPEC ARGENTINA EXPLORATION AND PRODUCTION, INC." ~ "Sinopec",
empresa == "TECPETROL S.A." ~ "Tecpetrol",
empresa == "PLUSPETROL S.A." ~ "Pluspetrol",
empresa == "PLUSPETROL ENERGY S.A." ~ "Pluspetrol",
empresa == "COMPAÑÍA GENERAL DE COMBUSTIBLES S.A." ~ "CGC",
empresa == "WINTERSHALL ENERGIA S.A." ~ "Wintershall",
empresa == "YSUR ENERGÍA ARGENTINA S.R.L." ~ "YSUR",
empresa == "YSUR PETROLERA ARGENTINA S.A." ~ "YSUR",
empresa == "TOTAL AUSTRAL S.A." ~ "Total Austral",
T ~ empresa)) %>%
filter(!(empresa %in% c("O&G DEVELOPMENTS LTD S.A." ,"PETROMINERA CHUBUT S.E."))) %>%
# filter(str_detect(concepto, 'pozo')) %>%
group_by(empresa, anio, unidad) %>%
summarise(inversion_anual = sum(realizado_anual, na.rm = T)) %>%
arrange(-inversion_anual)
inversiones_2005_2012
inversiones_anual = inversiones_2005_2012 %>%
filter(anio != 2012) %>%
group_by(anio) %>%
summarise(inversion_anual = sum(inversion_anual)) %>%
rbind(inversiones_anio_anterior %>%
group_by(anio) %>%
summarise(inversion_anual = sum(inversion_explotacion, inversion_exploracion)) )
inversiones_anual %>%
ggplot(aes(anio, inversion_anual))+
geom_col()+
labs(title = "Inversión anual total en el sector hidrocarburífero",
y = "Millones de USD", x = "Año", caption = "Elaboración propia en base a Secretaría de Energía")+
scale_y_continuous(breaks = round(seq(0,
max(inversiones_anual$inversion_anual)+1000, by = 1000)))+
scale_x_continuous(breaks = round(seq(min(inversiones_anual$anio),
max(inversiones_anual$anio), by = 1)))+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
library( "IRkernel" )
IRkernel::installspec()
install.packages( "IRkernel" )
library( "IRkernel" )
IRkernel::installspec()
IRkernel::installspec()
library( "IRkernel" )
IRkernel::installspec()
library( "IRkernel" )
IRkernel::installspec()
library( "IRkernel" )
IRkernel::installspec()
quit()
rm(list=ls())   #remove all objects
gc()            #garbage collection
require("data.table")
require("parallel")
require("rpart")
setwd( "C:/Archivos/maestria_cs_datos/Materias/DM_EyF/dmeyf/" )
ksemillas  <- c(995641, 433747, 536651, 388519, 269897) #reemplazar por las propias semillas
particionar  <- function( data, division, agrupa="", campo="fold", start=1, seed=NA )
{
if( !is.na(seed) )   set.seed( seed )
bloque  <- unlist( mapply(  function(x,y) { rep( y, x )} ,   division,  seq( from=start, length.out=length(division) )  ) )
data[ , (campo) :=  sample( rep( bloque, ceiling(.N/length(bloque))) )[1:.N],
by= agrupa ]
}
#------------------------------------------------------------------------------
ArbolSimple  <- function( fold_test, data, param )
{
#genero el modelo
modelo  <- rpart("clase_ternaria ~ .",
data= data[ fold != fold_test, ], #training  fold==1
xval= 0,
control= param )
#aplico el modelo a los datos de testing, fold==2
prediccion  <- predict( modelo, data[ fold==fold_test, ], type = "prob")
prob_baja2  <- prediccion[, "BAJA+2"]
ganancia_testing  <- sum(  data[ fold==fold_test ][ prob_baja2 >0.025,  ifelse( clase_ternaria=="BAJA+2", 48750, -1250 ) ] )
return( ganancia_testing )
}
#------------------------------------------------------------------------------
ArbolesCrossValidation  <- function( data, param, qfolds, semilla )
{
divi  <- rep( 1, qfolds )
particionar( data, divi, seed=semilla )
ganancias  <- mcmapply( ArbolSimple,
seq(qfolds), # 1 2 3 4 5
MoreArgs= list( data, param),
SIMPLIFY= FALSE,
mc.cores= 1 )   #se puede subir a 5 si posee Linux o Mac OS
#devuelvo la primer ganancia y el promedio
return( mean( unlist( ganancias )) *  qfolds )   #aqui normalizo
}
#------------------------------------------------------------------------------
#cargo los datos donde voy a ENTRENAR el modelo
dataset  <- fread("./datasetsOri/paquete_premium_202009.csv")
#inicializo la tabla donde voy a dejar los resultados
tb_resultados  <- data.table( maxdepth=integer(), ganancia=numeric() )
for(  vmaxdepth in  c(4,5,6,7,6,9,10,11) )
{
param_basicos  <- list( "cp"=-1, "maxdepth"= vmaxdepth )
gan  <- ArbolesCrossValidation( dataset,
param_basicos,
qfolds= 5, # 5-fold cross validation
semilla= ksemillas[1] )  #uso solo la primer semilla para particionar el dataset
tb_resultados  <- rbind( tb_resultados, list( vmaxdepth, gan ) )
}
tb_resultados
#cargo los datos donde voy a ENTRENAR el modelo
dataset  <- fread("../datasetsOri/paquete_premium_202009.csv")
#inicializo la tabla donde voy a dejar los resultados
tb_resultados  <- data.table( maxdepth=integer(), ganancia=numeric() )
tb_resultados
for(  vmaxdepth in  c(4,5,6,7,6,9,10,11) )
{
param_basicos  <- list( "cp"=-1, "maxdepth"= vmaxdepth )
gan  <- ArbolesCrossValidation( dataset,
param_basicos,
qfolds= 5, # 5-fold cross validation
semilla= ksemillas[1] )  #uso solo la primer semilla para particionar el dataset
tb_resultados  <- rbind( tb_resultados, list( vmaxdepth, gan ) )
}
tb_resultados
