runif(10)
sum( runif(10) < 0.85 )
sum( runif(10) < 0.1 )
runif(10) < 0.1
gustavo_ganador <- 0
gustavo_ganador <- 0
for( i in 1:10000 )
{
aciertos_michael <- sum( runif(10) < 0.85 )
aciertos_gustavo <- sum( runif(10) < 0.10 )
if( aciertos_gustavo > aciertos_michael ) gustavo_ganador <- gustavo_ganador +1
}
print( gustavo_ganador )
require("data.table")
set.seed( 102191 )
require("data.table")
set.seed( 102191 )
#calcula cuantos encestes logra un jugador con indice de enceste prob que hace qyt tiros libres
ftirar <- function( prob, qty )
{
return(  sum( runif(qty) < prob ) )
}
#defino los jugadores
mejor      <- 0.7
peloton    <- ( 501:599 ) / 1000
peloton
jugadores  <- c( mejor, peloton )
jugadores
#veo que tiene el vector
jugadores
#hago que los 100 jugadores tiren 10 veces cada uno
mapply(  ftirar, jugadores, 10 )
#hago que los 100 jugadores tiren 10 veces cada uno
mapply(  ftirar, jugadores, 10 )
primero_ganador <- 0
#hago que los 100 jugadores tiren 10 veces cada uno
mapply(  ftirar, jugadores, 10 )
require("data.table")
set.seed( 102191 )
#calcula cuantos encestes logra un jugador con indice de enceste prob que hace qyt tiros libres
ftirar <- function( prob, qty )
{
return(  sum( runif(qty) < prob ) )
}
#defino los jugadores
mejor      <- 0.7
peloton    <- ( 501:599 ) / 1000
jugadores  <- c( mejor, peloton )
#veo que tiene el vector
jugadores
#hago que los 100 jugadores tiren 10 veces cada uno
mapply(  ftirar, jugadores, 10 )
primero_ganador <- 0
primero_ganador <- 0
for( i in 1:10000 )  #diez mil experimentos
{
vaciertos  <- mapply( ftirar, jugadores, 10 )  #10 tiros libres cada jugador
mejor  <- which.max( vaciertos )
if( mejor == 1 )  primero_ganador <- primero_ganador + 1
}
print(  primero_ganador )
mejor
#hago que los 100 jugadores tiren 10 veces cada uno
mapply(  ftirar, jugadores, 10 )
require("data.table")
set.seed( 102191 )
#calcula cuantos encestes logra un jugador con indice de enceste prob que hace qyt tiros libres
ftirar <- function( prob, qty )
{
return(  sum( runif(qty) < prob ) )
}
mejor     <-  0.7
peloton   <-  ( 501:599 ) / 1000
jugadores <-  c( mejor, peloton )
#veo que tiene el vector
jugadores
for( i in 1:10 )
{
vaciertos <- mapply( ftirar, jugadores, 10 )  #cada jugador tira 10 tiros libres
mejor <- which.max( vaciertos )
aciertos_torneo <-  vaciertos[ mejor ]
aciertos_segunda <- ftirar( jugadores[mejor], 10 )
cat( aciertos_torneo, aciertos_segunda, "\n" )
}
vaciertos
mejor
vaciertos[ mejor ]
require("data.table")
set.seed( 102191 )
#calcula cuantos encestes logra un jugador con indice de enceste prob que hace qyt tiros libres
ftirar <- function( prob, qty )
{
return( sum( runif(qty) < prob ) )
}
jugadores  <- rep( 0.7, 100 )  #jugadores identicos
for( i in 1:10 )
{
vaciertos  <- mapply( ftirar, jugadores, 100 )  #cada jugador tira 100 tiros libres
mejor  <- which.max( vaciertos )
aciertos_torneo  <- vaciertos[ mejor ]
aciertos_segunda  <- ftirar( jugadores[mejor], 100 )
cat( aciertos_torneo, aciertos_segunda, "\n" )
}
require("data.table")
set.seed( 102191 )
#calcula cuantos encestes logra un jugador con indice de enceste prob que hace qyt tiros libres
ftirar <- function( prob, qty )
{
return(  sum( runif(qty) < prob ) )
}
jugadores  <- rep( 0.7, 100 )  #jugadores identicos
diferencias  <- c()
for( i in 1:9999 )
{
vaciertos  <- mapply( ftirar, jugadores, 100 )  #cada jugador tira 100 tiros libres
mejor  <- which.max( vaciertos )
aciertos_torneo  <- vaciertos[ mejor ]
aciertos_segunda  <- ftirar( jugadores[mejor], 100 )
diferencias  <- c( diferencias, aciertos_torneo - aciertos_segunda )
}
diferencias
mean(diferencias)
require("data.table")
set.seed( 102191 )
#calcula cuantos encestes logra un jugador con indice de enceste prob que hace qyt tiros libres
ftirar <- function( prob, qty )
{
return(  sum( runif(qty) < prob ) )
}
jordan   <- 0.85
peloton  <- rep( 0.6, 99 )  #jugadores identicos
jugadores  <- c( jordan, peloton )
for( i in 1:10 )
{
vaciertos  <- mapply( ftirar, jugadores, 100 )  #cada jugador tira 100 tiros libres
mejor  <- which.max( vaciertos )
aciertos_torneo  <-  vaciertos[ mejor ]
aciertos_segunda  <- ftirar( jugadores[mejor], 100 )
cat( mejor, aciertos_torneo, aciertos_segunda, "\n" )
}
require("data.table")
set.seed( 102191 )
#calcula cuantos encestes logra un jugador con indice de enceste prob que hace qyt tiros libres
ftirar <- function( prob, qty )
{
return(  sum( runif(qty) < prob ) )
}
#defino los jugadores
mejor      <-  0.7
peloton    <-  ( 501:599 ) / 1000
jugadores  <-  c( peloton, mejor ) #intencionalmente el mejor esta al final
#veo que tiene el vector
jugadores
#hago que los 100 jugadores tiren 10 veces cada uno
mapply(  ftirar, jugadores, 10 )
for(  tiros_libres  in c(10, 20, 50, 100, 200, 300, 400, 415, 500, 600, 700, 1000 ) )
{
primero_ganador  <- 0
for( i in 1:10000 )  #diez mil experimentos
{
vaciertos <- mapply( ftirar, jugadores, tiros_libres )
mejor  <- which.max( vaciertos )
if( mejor == 100 )  primero_ganador <- primero_ganador + 1
}
cat( tiros_libres, primero_ganador/10000, "\n" )
}
